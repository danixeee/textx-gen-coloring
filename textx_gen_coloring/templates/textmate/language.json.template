{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "{{ name }}",
	"scopeName": "source.{{ name }}",
	"patterns": [
        {%- if comment.line != None or (comment.block_start != None and comment.block_end != None) %}
        {
            "include": "#comment"
        },
        {%- endif %}
        {
            "include": "#string"
        },
        {
            "include": "#number"
        },
        {
            "include": "#language_keyword"
        },
        {
            "include": "#language_operation"
        },
        {
            "include": "#regular_expression"
        }
    ],
    "repository": {
        {%- if comment.line != None or (comment.block_start != None and comment.block_end != None) %}
        "comment": {
            "patterns": [
                {%- if comment.line != None %}
                {
                    "match": "{{comment.line}}.*$",
                    "name": "comment.line"
                },
                {%- endif %}
                {%- if comment.block_start != None and comment.block_end != None %}
                {
                    "name": "comment.block",
                    "begin": "{{comment.block_start}}",
                    "end": "{{comment.block_end}}"
                }
                {%- endif %}
            ]
        },
        {%- endif %}
        "string": {
            "patterns": [
                {
                    "name": "string.quoted.single",
                    "begin": "'",
                    "end": "'"
                },
                {
                    "name": "string.quoted.double",
                    "begin": "\"",
                    "end": "\""
                }
            ]
        },
        "number": {
            "patterns": [
                {
                    "match": "\\b[0-9]+\\b\\.{0,1}",
                    "name": "constant.numeric"
                }
            ]
        },
        "language_keyword": {
            "patterns": [
                {%- for keyword in keywords %}
                {
                    "match": "{{keyword.match}}",
                    "name": "{{keyword.name}}"
                }
                {%- if loop.index != keywords|length -%}
                ,
                {%- endif %}
                {%- endfor %}
            ]
        },
        "language_operation": {
            "patterns": [
                {%- for operation in operations %}
                {
                    "match": "{{operation.match}}",
                    "name": "{{operation.name}}"
                }
                {%- if loop.index != operations|length -%}
                ,
                {%- endif %}
                {%- endfor %}
            ]
        },
        "regular_expression": {
            "patterns": [
                {%- for expression in regular_expressions %}
                {
                    "match": "({{expression.match}})",
                    "name": "{{expression.name}}",
                    "captures": {
                        "1": {
                            "patterns": [
                                {%- for operation in operations %}
                                {
                                    "match": "{{operation.match}}",
                                    "name": "{{operation.name}}"
                                }
                                {%- if loop.index != operations|length -%}
                                ,
                                {%- endif %}
                                {%- endfor %}
                            ]
                        }
                    }

                }
                {%- if loop.index != regular_expressions|length -%}
                ,
                {%- endif %}
                {%- endfor %}
            ]
        }
    }
}
